{"version":3,"sources":["webpack:///./src/containers/PostPage.js"],"names":["PostPage","React","Component","constructor","props","componentDidMount","annotatedScreenshot","uuid","removeScreenshot","render","trello","ROUTING","LOGIN_PAGE","console","log","success","error","mapDispatchToProps","dispatch","bindActionCreators","mapStateToProps","state","currentUser","auth","integrations","screenshot","screenshots","connect"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMA,QAAN,SAAuBC,4CAAK,CAACC,SAA7B,CAAuC;AAErCC,aAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,mBAAiB,GAAG;AAClB,UAAM;AAAEC,yBAAmB,EAAE;AAAEC;AAAF;AAAvB,QAAoC,KAAKH,KAA/C;AACA,SAAKA,KAAL,CAAWI,gBAAX,CAA4B;AAAED;AAAF,KAA5B;AACD;;AAEDE,QAAM,GAAI;AACR,UAAM;AAAEH,yBAAF;AAAuBI;AAAvB,QAAkC,KAAKN,KAA7C;;AACA,QAAI,CAACE,mBAAL,EAAyB;AACvB,aAAO,2DAAC,yDAAD;AAAU,UAAE,EAAEK,kDAAO,CAACC;AAAtB,QAAP;AACD,KAFD,MAEM;AACJ,aACE,wHACE,2DAAC,2DAAD,OADF,EAGE,2DAAC,6DAAD;AAAW,iBAAS,EAAE,KAAtB;AAA8B,UAAE,EAAE;AAAlC,SACE,2DAAC,uDAAD,QACE,2DAAC,uDAAD;AAAK,UAAE,EAAE,CAAT;AAAY,UAAE,EAAE,CAAhB;AAAmB,UAAE,EAAE,CAAvB;AAA0B,UAAE,EAAE;AAA9B,SACE,2DAAC,yDAAD;AAAM,UAAE,EAAC;AAAT,SACE,2DAAC,yDAAD,CAAM,MAAN,QACE,2DAAC,yDAAD,CAAM,KAAN;AAAY,YAAI,EAAC;AAAjB,QADF,CADF,EAIE,2DAAC,yDAAD,CAAM,IAAN;AAAW,UAAE,EAAE,CAAf;AAAkB,UAAE,EAAE;AAAtB,SACIC,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,OAAnB,CADJ,EAEIL,MAAM,CAACK,OAAP,IAAmB,2DAAC,yDAAD;AAAM,cAAM,EAAEL,MAAM,CAACK;AAArB,QAFvB,EAGIL,MAAM,CAACM,KAAP,IAAiB,2DAAC,yDAAD;AAAM,cAAM,EAAEN,MAAM,CAACM;AAArB,QAHrB,EAII,EAAEN,MAAM,CAACM,KAAP,IAAgBN,MAAM,CAACK,OAAzB,KAAqC,2DAAC,yDAAD;AAAM,cAAM,EAAE;AAAC,yBAAgB;AAAjB;AAAd,QAJzC,CAJF,CADF,CADF,CADF,CAHF,CADF;AAuBD;AACF;;AAxCoC;;AA4CvC,MAAME,kBAAkB,GAAIC,QAAD,IAAcC,gEAAkB,CAAC;AAAEX,6EAAgBA;AAAlB,CAAD,EAAuBU,QAAvB,CAA3D;;AAEA,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAM;AAAEC;AAAF,MAAkBD,KAAK,CAACE,IAA9B;AACA,QAAM;AAAEb;AAAF,MAAaW,KAAK,CAACG,YAAzB;AACA,QAAM;AAAEC,cAAU,EAAEnB;AAAd,MAAsCe,KAAK,CAACK,WAAlD;AAEA,SAAO;AAAEJ,eAAF;AAAeZ,UAAf;AAAuBJ;AAAvB,GAAP;AACD,CAND;;AAQeqB,0HAAO,CAACP,eAAD,EAAkBH,kBAAlB,CAAP,CAA6CjB,QAA7C,CAAf,E","file":"12.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink, Redirect } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport { ROUTING } from '../constants'\n\nimport { removeScreenshot } from '../actions'\n\nimport Button from '../components/Button'\nimport Col from '../components/Col'\nimport Row from '../components/Row'\nimport Container from '../components/Container'\nimport Navbar from '../components/Navbar'\nimport Card from '../components/Card'\nimport TextAlign from '../components/TextAlign'\nimport Text from '../components/Text'\nimport TrelloForm from '../components/TrelloForm'\n\n\nclass PostPage extends React.Component {\n\n  constructor(props) {\n    super(props)\n  }\n\n  componentDidMount() {\n    const { annotatedScreenshot: { uuid } } = this.props\n    this.props.removeScreenshot({ uuid })\n  }\n\n  render () {\n    const { annotatedScreenshot, trello } = this.props\n    if (!annotatedScreenshot){\n      return <Redirect to={ROUTING.LOGIN_PAGE} />\n    }else {\n      return (\n        <>\n          <Navbar>\n          </Navbar>\n          <Container fullWidth={false}  mt={200}>\n            <Row>\n              <Col xl={8} lg={8} md={8} sm={12} >\n                <Card bg=\"secondary\">\n                  <Card.Header>\n                    <Card.Title text=\"Post it on Trello\" />\n                  </Card.Header>\n                  <Card.Body px={5} py={5}>\n                    { console.log(trello.success) }\n                    { trello.success && (<Text object={trello.success} />) }\n                    { trello.error && (<Text object={trello.error} />) }\n                    { !(trello.error || trello.success) && <Text object={{\"Please wait\" : \"Your card is about to be created\"}} /> }\n                  </Card.Body>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n        </>\n      )\n    }\n  }\n}\n\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({ removeScreenshot }, dispatch)\n\nconst mapStateToProps = state => {\n  const { currentUser } = state.auth\n  const { trello } = state.integrations\n  const { screenshot: annotatedScreenshot } = state.screenshots\n\n  return { currentUser, trello, annotatedScreenshot }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostPage)\n"],"sourceRoot":""}